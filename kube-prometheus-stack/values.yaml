kube-prometheus-stack:
  grafana:
    # username is 'admin'
    adminPassword: admin
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
      hosts: ['grafana.localhost']
      path: "/"
      # tls:
      # - secretName: tls-credential
      #   hosts:
      #   - grafana.k3s.local
    sidecar:
      dashboards:
        # Namespaces list. If specified, the sidecar will search for config-maps/secrets inside these namespaces.
        # Otherwise the namespace in which the sidecar is running will be used.
        # It's also possible to specify ALL to search in all namespaces.
        searchNamespace: ALL

  prometheus:
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
      hosts: ['prometheus.localhost']
      paths: ['/']
      # tls:
      # - secretName: tls-credential
      #   hosts:
      #   - prometheus.k3s.local
  # ...
    prometheusSpec:
      externalUrl: "http://prometheus.localhost/"
      routePrefix: /

      ## If true, a nil or {} value for prometheus.prometheusSpec.podMonitorSelector will cause the
      ## prometheus resource to be created with selectors based on values in the helm deployment,
      ## which will also match the podmonitors created.
      podMonitorSelectorNilUsesHelmValues: false

      ## PodMonitors to be selected for target discovery.
      ## If {} and podMonitorSelectorNilUsesHelmValues: false, select all PodMonitors in the cluster.
      ## If {} and podMonitorSelectorNilUsesHelmValues: true, select only PodMonitors created by this stack.
      podMonitorSelector: {}

      ## Label prometheus pod as in CIE's cluster to avoid special configuration
      ## for running apps locally, in particular the network policy.
      podMetadata:
        labels:
          app: metricbeat-daemonset

  alertmanager:
    enabled: false
